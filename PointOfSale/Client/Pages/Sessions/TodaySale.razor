
@inject Microsoft.Extensions.Localization.IStringLocalizer<Resource.Orders.Orders> Loc
@inject Microsoft.Extensions.Localization.IStringLocalizer<PointOfSale.DAL.Resources.Resources> Loc2
<div class="card card-custom">
    <div class="card-body p-9">
        <div class="row">
            <div class="col-md-12">
                <RadzenContent Container="main" Style="direction:rtl;text-align:right">
                    <ChildContent>
                        <RadzenHeading Size="H1" Text="@Loc["Order"]" Style="text-align:right">
                        </RadzenHeading>
                        <div class="row">
                            <div class="col-md-12">
                                <RadzenGrid @ref="gridOrders" AllowFiltering="true" AllowPaging="true" AllowSorting="true" Data="@(orders)" TItem="Order">
                                    <Columns>
                                        <RadzenGridColumn TItem="Order" Context="Order" Property="Id" Title="Id" Visible="false" Type="integer">
                                        </RadzenGridColumn>
                                        <RadzenGridColumn TItem="Order" Context="Order" Property="OrderNumber" Title="@Loc2["OrderNumber"]" Type="string">
                                        </RadzenGridColumn>
                                        <RadzenGridColumn Width="200px" TItem="Order" Property="Customer.Name" Title="@Loc2["Customer"]" />
                                        <RadzenGridColumn TItem="Order" Property="OrderDate" Title="@Loc2["OrderDate"]"></RadzenGridColumn>
                                        <RadzenGridColumn TItem="Order" Property="Total" Title="@Loc2["Total"]"></RadzenGridColumn>
                                        <RadzenGridColumn TItem="Order" Context="order" Bubble="false" Filterable="false" Sortable="false" TextAlign="Radzen.TextAlign.Center" Width="100px" Title="@Loc["PrintBill"]">
                                            <Template Context="order">
                                                <RadzenButton Icon="print" Size="Radzen.ButtonSize.Small" Click="@(args => PrintBill(order.OrderNumber))">
                                                </RadzenButton>
                                            </Template>
                                        </RadzenGridColumn>
                                        <RadzenGridColumn TItem="Order" Context="order" Filterable="false" Sortable="false" Bubble="false" Width="70px" Title="@Loc["PrintOrder"]">
                                            <Template Context="order">
                                                <RadzenButton ButtonStyle="Radzen.ButtonStyle.Danger" Icon="print" Size="Radzen.ButtonSize.Small" Click="@((args) =>PrintOrder(order.OrderNumber))">
                                                </RadzenButton>
                                            </Template>
                                        </RadzenGridColumn>
                                    </Columns>
                                    <Template Context="order">
                                        <RadzenGrid AllowFiltering="true" AllowPaging="true" AllowSorting="true" Data="@(order.OrderItem)" TItem="OrderItem">
                                            <Columns>
                                                <RadzenGridColumn TItem="OrderItem" Context="Order" Property="Id" Visible="false" Title="Id" Type="integer">
                                                </RadzenGridColumn>
                                                <RadzenGridColumn TItem="OrderItem" Property="Product.Name" Title="@Loc2["Product"]"></RadzenGridColumn>
                                                <RadzenGridColumn TItem="OrderItem" Property="Quantity" Title="@Loc2["Quantity"]"></RadzenGridColumn>
                                                <RadzenGridColumn TItem="OrderItem" Property="Price" Title="@Loc2["Price"]"></RadzenGridColumn>
                                                <RadzenGridColumn TItem="OrderItem" Property="SubTotal" Title="@Loc2["SubTotal"]"></RadzenGridColumn>
                                                <RadzenGridColumn TItem="OrderItem" Property="ProductDiscount" Title="@Loc2["ProductDiscount"]"></RadzenGridColumn>
                                            </Columns>
                                        </RadzenGrid>
                                    </Template>
                                </RadzenGrid>
                            </div>
                        </div>
                    </ChildContent>
                </RadzenContent>
            </div>
        </div>
    </div>
</div>
@code {
    [Inject]
    protected Radzen.DialogService DialogService { get; set; }
    List<Order> orders = new List<Order>();
    protected RadzenGrid<Order> gridOrders;
    protected override async Task OnInitializedAsync()
    {
        await JSRuntime.InvokeVoidAsync("StartLoading");
        await Load();
        DialogService.OnOpen += Open;
        DialogService.OnClose += Close;
        await JSRuntime.InvokeVoidAsync("StopLoading");
    }
    void Open(string title, Type type, Dictionary<string, object> parameters, Radzen.DialogOptions options)
    {
        //events.Add(DateTime.Now, "Dialog opened");
        StateHasChanged();
    }

    async void Close(dynamic result)
    {
        //events.Add(DateTime.Now, "Dialog closed. Result: " + result);
        Load();
        await gridOrders.Reload();
        StateHasChanged();
    }
    async Task Load()
    {
        orders = await Http.GetFromJsonAsync<List<Order>>("/api/Orders/GetAllWithIncludeToday");
    }
    async void PrintOrder(string id)
    {
        var order = await Http.GetFromJsonAsync<Order>("/api/Orders/GetOrderByNo/" + id);
        var result = await DialogService.OpenAsync<PointOfSale.Client.Pages.Sessions.PrintOrder>("Print Order", new Dictionary<string, object>() { { "Order", order } },
                new Radzen.DialogOptions() { Width = "400px", Height = "500px" });
        await InvokeAsync(() => { StateHasChanged(); });
    }
    async void PrintBill(string id)
    {
        var order = await Http.GetFromJsonAsync<Order>("/api/Orders/GetOrderByNo/" + id);
        var result = await DialogService.OpenAsync<PointOfSale.Client.Pages.Sessions.PrintBill>("Print Bill", new Dictionary<string, object>() { { "Order", order } },
             new Radzen.DialogOptions() { Width = "400px", Height = "500px" });
        await InvokeAsync(() => { StateHasChanged(); });
    }

}
