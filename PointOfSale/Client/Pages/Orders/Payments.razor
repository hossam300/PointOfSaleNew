@page "/Payments"
@using Radzen
@using System.IO
@inject Microsoft.Extensions.Localization.IStringLocalizer<Resource.Orders.Payments> Loc
@inject Microsoft.Extensions.Localization.IStringLocalizer<PointOfSale.DAL.Resources.Resources> Loc2
<!--begin::Subheader-->
<div class="subheader py-2 py-lg-4 subheader-transparent" id="kt_subheader">
    <div class="container d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap">
        <!--begin::Info-->
        <div class="d-flex align-items-center flex-wrap mr-1">
            <!--begin::Page Heading-->
            <div class="d-flex align-items-baseline mr-5">
                <!--begin::Page Title-->
                <h5 class="text-dark font-weight-bold my-2 mr-5">@Loc["OrderPayments"]</h5>
                <!--end::Page Title-->
            </div>
            <!--end::Page Heading-->
        </div>
        <!--end::Info-->
        <!--begin::Toolbar-->
        <!--end::Toolbar-->
    </div>
</div>
<!--end::Subheader-->
<div class="content d-flex flex-column flex-column-fluid" id="kt_content">
    <!--begin::Entry-->
    <div class="d-flex flex-column-fluid">
        <!--begin::Container-->
        <!--begin::Card-->
        <div class="card card-custom" style="width: 100%;">
            <div class="card-body p-9">
                <div class="row">
                    <div class="col-md-12">
                        <RadzenContent Container="main" Style="direction:rtl;text-align:right">
                            <ChildContent>
                                <RadzenHeading Size="H1" Text="@Loc["OrderPayments"]">
                                </RadzenHeading>
                                <div class="row">
                                    <div class="col-md-12">
                                        <RadzenTree Data=@OrderPayments Style="width:100%;height:100%">
                                            <RadzenTreeLevel TextProperty="MehtodName" ChildrenProperty="Orders">
                                                <Template>
                                                    <table class="table">
                                                        <tr>
                                                            <td>
                                                                <strong>@((context.Value as PaymentMethodDTO).MehtodName)</strong>
                                                            </td>
                                                            <td>
                                                                <strong>@((context.Value as PaymentMethodDTO).Cash)</strong>
                                                            </td>
                                                        </tr>
                                                    </table>
                                                </Template>
                                            </RadzenTreeLevel>

                                            <RadzenTreeLevel TextProperty="OrderNumber" HasChildren=@(product => false)>
                                                <Template>
                                                    <table class="table">
                                                        <thead>
                                                            <tr>
                                                                <th> @Loc["Customer"]</th>
                                                                <th> @Loc["OrderNumber"]</th>
                                                                <th> @Loc["OrderDate"]</th>
                                                                <th> @Loc["Total"]</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            <tr>
                                                                <td>
                                                                    <a href="/CustomerDetails/@((context.Value as OrderDTO).CustomerId)"> <strong>@((context.Value as OrderDTO).CustomerName)</strong></a>
                                                                </td>
                                                                <td>
                                                                    <button class="btn btn-link" @onclick="()=>PrintBill((context.Value as OrderDTO).OrderNumber)"><strong>@((context.Value as OrderDTO).OrderNumber)</strong></button>
                                                                </td>
                                                                <td>
                                                                    <strong>@((context.Value as OrderDTO).OrderDate)</strong>
                                                                </td>
                                                                <td>
                                                                    <strong>@((context.Value as OrderDTO).Total)</strong>
                                                                </td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                </Template>
                                            </RadzenTreeLevel>
                                        </RadzenTree>
                                    </div>
                                </div>
                            </ChildContent>
                        </RadzenContent>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@code {
    [Inject]
    protected DialogService DialogService { get; set; }
    List<PaymentMethodDTO> OrderPayments;
    protected override async Task OnInitializedAsync()
    {
        await JSRuntime.InvokeVoidAsync("StartLoading");
        OrderPayments = await Http.GetFromJsonAsync<List<PaymentMethodDTO>>("/api/OrderPayments/GetAllGroubByMethod");
        await JSRuntime.InvokeVoidAsync("StopLoading");
    }
    async void PrintBill(string OrderNumber)
    {
        var order = await Http.GetFromJsonAsync<Order>("/api/Orders/GetOrderByNo/" + OrderNumber);
        var result = await DialogService.OpenAsync<Sessions.PrintBill>("Print Bill", new Dictionary<string, object>() { { "Order", order } },
             new Radzen.DialogOptions() { Width = "400px", Height = "500px" });
        await InvokeAsync(() => { StateHasChanged(); });
    }


}
