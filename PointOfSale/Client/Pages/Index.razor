@page "/"
@using System.Globalization;
@inject Microsoft.Extensions.Localization.IStringLocalizer<Resource.Index> Loc
@inject NavigationManager Navigation
<!--begin::Subheader-->
<div class="subheader py-2 py-lg-4 subheader-transparent" id="kt_subheader">
    <div class="container d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap">
        <!--begin::Info-->
        <div class="d-flex align-items-center flex-wrap mr-1">
            <!--begin::Page Heading-->
            <div class="d-flex align-items-baseline mr-5">
                <!--begin::Page Title-->
                <h5 class="text-dark font-weight-bold my-2 mr-5">@Loc["Home"]</h5>
                <!--end::Page Title-->
                <!--begin::Breadcrumb-->
                <!--end::Breadcrumb-->
            </div>
            <!--end::Page Heading-->
        </div>
        <!--end::Info-->
        <!--begin::Toolbar-->
        <div class="d-flex align-items-center">
            <a href="/Shops/AddShop" class="btn btn-primary">
                @Loc["AddShop"]
            </a>
        </div>
        <!--end::Toolbar-->
    </div>
</div>
<!--end::Subheader-->
<!--begin::Entry-->
<div class="d-flex flex-column-fluid">
    <!--begin::Container-->
    <div class="container">
        <div class="row">
            @if (shops.Count < 0)
            {
                <div class="modal-overlay">
                    <div class="spinner">
                        <div class="rect1"></div>
                        <div class="rect2"></div>
                        <div class="rect3"></div>
                        <div class="rect4"></div>
                        <div class="rect5"></div>
                    </div>
                </div>
            }
            <Virtualize Context="item" Items="@shops" ItemSize="25">

                <div class="col-lg-6" style="margin-top: 1%;">
                    <!--begin::Card-->
                    <div class="card card-custom">
                        <div class="card-header">
                            <div class="card-title">
                                <span class="card-icon">
                                    <i class="flaticon-graphic-2 text-primary"></i>
                                </span>
                                <h3 class="card-label">
                                    @item.ShopName
                                    @if (item.Branch != null)
                                    {
                                        <small> @Loc["Branch"]    : @item.Branch.Name</small>}
                                    else
                                    { @*<small> @Loc["Branch"] : </small>*@}
                                </h3>
                            </div>
                            <div class="card-toolbar">
                                <div class="dropdown dropdown-inline" data-toggle="tooltip" title="Quick actions" data-placement="left">
                                    <a href="#" class="btn btn-hover-light-primary btn-sm btn-icon" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <i class="ki ki-bold-more-hor"></i>
                                    </a>
                                    <div class="dropdown-menu p-0 m-0 dropdown-menu-md dropdown-menu-right">
                                        <!--begin::Navigation-->
                                        <ul class="navi navi-hover">
                                            <li class="navi-item">
                                                <a href="/Sessions/@item.Id" class="navi-link">
                                                    <span class="navi-text">
                                                        <span class="label label-xl label-inline label-light-success">@Loc["Sessions"]</span>
                                                    </span>
                                                </a>
                                            </li>
                                            <li class="navi-item">
                                                <a href="/SalesDetailReports/@item.Id" class="navi-link">
                                                    <span class="navi-text">
                                                        <span class="label label-xl label-inline label-light-danger">@Loc["SalesOrders"]</span>
                                                    </span>
                                                </a>
                                            </li>
                                            <li class="navi-item">
                                                <a href="/Orders/@item.Id" class="navi-link">
                                                    <span class="navi-text">
                                                        <span class="label label-xl label-inline label-light-warning">@Loc["Orders"]</span>
                                                    </span>
                                                </a>
                                            </li>
                                            <li class="navi-item">
                                                <a href="/Shops/EditShop/@item.Id" class="navi-link">
                                                    <span class="navi-text">
                                                        <span class="label label-xl label-inline label-light-primary">@Loc["Edit"]</span>
                                                    </span>
                                                </a>
                                            </li>
                                            @*<li class="navi-item">
                                                <a href="/Shops/EditShop/@item.Id" class="navi-link">
                                                    <span class="navi-text">
                                                        <span class="label label-xl label-inline label-light-dark">@Loc["Details"]</span>
                                                    </span>
                                                </a>
                                            </li>*@
                                            <li class="navi-separator mt-3 opacity-70"></li>
                                            <li class="navi-footer py-4">
                                                <a class="btn btn-clean font-weight-bold btn-sm" href="/Shops/AddShop">
                                                    <i class="ki ki-plus icon-sm"></i>@Loc["AddNew"]
                                                </a>
                                            </li>
                                        </ul>
                                        <!--end::Navigation-->
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                @if (item.session == null)
                                {
                                    <div class="col-xl-4">
                                        <a href="/Sessions/Create/@item.Id" target="_blank" class="btn btn-primary">@Loc["NewSession"]</a>
                                    </div>
                                }
                                else if (item.session.Status == Status.Colsed)
                                {
                                    <div class="col-xl-4">
                                        <a href="/Sessions/Create/@item.Id" target="_blank" class="btn btn-primary"> @Loc["NewSession"]</a>
                                    </div>
                                    <div class="col-xl-4">
                                        <p> @Loc["LastClosingCash"] </p>
                                        <p>@item.session.Cash @Loc["EGP"] </p>
                                    </div>
                                    <div class="col-xl-4">
                                        <p>@Loc["LastClosingDate"] </p>
                                        @*@if (item.session.ClosedDate != null)
                                            {*@
                                        <p>@item.session.ClosedDate.Value.ToString("R") </p>
                                        @*}*@
                                    </div>
                                }
                                else if (item.session.Status == Status.Open)
                                {
                                    <div class="col-xl-3">
                                        <a href="/Sessions/Create/@item.Id" target="_blank" class="btn btn-primary">@Loc["Resume"]</a>
                                    </div>
                                    <div class="col-xl-3">
                                        <button @onclick="()=>CloseSession(item.session)" target="_blank" class="btn btn-danger">@Loc["Colse"]</button>
                                    </div>

                                }
                                else
                                {
                                    <div class="col-xl-3">
                                        <a href="/Sessions/Create/@item.Id" target="_blank" class="btn btn-primary">@Loc["NewSession"]</a>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <!--end::Card-->
                </div>
            </Virtualize>
        </div>
    </div>
    <!--end::Container-->
</div>
<!--end::Entry-->
@code{
    List<ShopDTO> shops = new List<ShopDTO>();
    [Inject]
    AuthenticationStateProvider AuthenticationStateProvider { get; set; }
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }
    protected override async Task OnInitializedAsync()
    {
        var authenticationState = await AuthenticationStateTask;
        if (authenticationState?.User?.Identity is null || !authenticationState.User.Identity.IsAuthenticated)
        {
            var returnUrl = Navigation.ToBaseRelativePath(Navigation.Uri);

            if (string.IsNullOrWhiteSpace(returnUrl))
                Navigation.NavigateTo("/Login", true);
            else
                Navigation.NavigateTo("/Login");
        }
        await JSRuntime.InvokeVoidAsync("StartLoading");
        shops = await Http.GetFromJsonAsync<List<ShopDTO>>("/api/Shops/GetAllWithoutInclude");
        await JSRuntime.InvokeVoidAsync("StopLoading");
    }
    async void CloseSession(SessionDTO session)
    {
        await JSRuntime.InvokeVoidAsync("StartLoading");
        session.ClosedDate = DateTime.Now;
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        var users = user.Claims.FirstOrDefault(c => c.Type == "UserId").Value;
        session.CosedById = users;
        session.Status = Status.Colsed;
        Session _session = new Session
        {
            ClosedDate = session.ClosedDate,
            CosedById = session.CosedById,
            CreationDate = session.CreationDate,
            ShopId = session.ShopId,
            Id = session.Id,
            CreatorId = session.CreatorId,
            SessionNo = session.SessionNo,
            Status = session.Status
        };
        await Http.PutAsJsonAsync<Session>("/api/Sessions/Update/", _session);
        InvokeAsync(StateHasChanged);
        await JSRuntime.InvokeVoidAsync("StopLoading");
    }
}